name: Deploy to Amazon EC2

on:
  push:
    branches: [ "develop" ]

# AWS에서 설정한 값들을 작성
# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹 이름
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: petwif-bucket
  CODE_DEPLOY_APPLICATION_NAME: petwif
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: petwif-deployment-group

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # JDK 11 설치
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # 운영환경에 대한 설정 파일 정보
    - name: Set YML File
      run: |
        cd ./src/main/resources
        touch ./application.yml
        echo "$" > ./application-prod.yml

    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: clean build -x test

    # AWS 인증 (IAM 사용자 Access Key, Secret Key 적용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: $
        aws-secret-access-key: $
        aws-region: $

    # 빌드 결과물을 s3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name $ \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .

    # 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name $ \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name $ \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
