name: Deploy to Amazon EC2

on:
  push:
    branches: [ "develop" ]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: petwif-bucket
  AWS_CODE_DEPLOY_APPLICATION: petwif-CD
  AWS_CODE_DEPLOY_GROUP: targer

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      
	# JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

    # 운영환경에 대한 설정 파일 정보 생성
      - name: create application.yml file
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > ./src/main/resources/application.yml

	# 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build and Test
        run: ./gradlew build test

	# 빌드 파일을 zip 형식으로 압축 - S3에서는 jar 저장이 안되기 때문에 zip으로 생성
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

    # AWS 인증 (IAM 사용자 Access Key, Secret Key 적용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

# S3 버킷에 빌드파일(zip 파일)을 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$AWS_S3_BUCKET/$GITHUB_SHA.zip

	# EC2 인스턴스에 S3에 저장되어 있던 zip 파일을 받아와 배포 시작
      - name: EC2에 배포
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=$GITHUB_SHA.zip,bundleType=zip
 
